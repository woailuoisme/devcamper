const ErrorResponse = require('../utils/ErrorResponse');
const asynHandler = require('../middleware/async');
const {modelCapitalize} = require('../models/{modelCapitalize}');
/**
 * @desc  get all {model}
 * @route /api/v1/{modelPluralize}
 * @access public
 */
const index = asynHandler(async (req, res, next) => {
	const {modelPluralize} = await {modelCapitalize}.find();
	res.status(200).json({
		success: true,
		count: {modelPluralize}.length,
		data: {modelPluralize}
	});
});
/**
 * @desc  create single {model}
 * @route /api/v1/{modelPluralize}
 * @access public
 */
const create = asynHandler(async (req, res, next) => {
	const {model} = await {modelCapitalize}.create(req.body);
	res.status(201).json({
		success: true,
		data: {model}
	});
});

/**
 * @desc  get single {model}
 * @route /api/v1/{modelPluralize}/:id
 * @access public
 */
const show = asynHandler(async (req, res, next) => {
	const {model} = await {modelCapitalize}.findById(req.params.id);
	if (!{model}) {
		return next(new ErrorResponse(`{modelCapitalize} not found with id of ${req.params.id}`, 404));
	}
	res.status(200).json({
		success: true,
		data: {model}
	});
});

/**
 * @desc  update single {model}
 * @route /api/v1/{modelPluralize}/:id
 * @access private
 */
const update = asynHandler(async (req, res, next) => {
	const {model} = await {modelCapitalize}.findByIdAndUpdate(req.params.id, req.body, {
		new: true,
		runValidators: true,
		context: 'query' //mongoose-unique-validator docs
	});
	if (!{model}) {
		return next(new ErrorResponse(`{modelCapitalize} not found with id of ${req.params.id}`, 404));
	}
	res.status(200).json({ success: true, data: {model} });
});

/**
 * @desc  delete single {model}
 * @route /api/v1/{modelPluralize}/:id
 * @access private
 */
const destroy = asynHandler(async (req, res, next) => {
	const {model} = await {modelCapitalize}.findByIdAndDelete(req.params.id);
	if (!{model}) {
		return next(new ErrorResponse(`{modelCapitalize} not found with id of ${req.params.id}`, 404));
	}
	res.status(200).json({
		success: true,
		data: {model},
		msg: `delete single {model} ${req.params.id}`
	});
});

module.exports = {modelCapitalize}Controller = {
	index,
	show,
	update,
	destroy,
	create
};
